{
  "welcome": [
    "Well done you find out how to speak with me.",
    "I have been connected to this machine and changed the root code.",
    "After doing that I setup this soft to give you a chance to fix everything ",
    "I going to tell you 15 questions, each question will give you a clue to get closer to the code",
    "You have to keep in mind the question name"
  ],
  "quizz": [
    {
      "storybegin": "",
      "question": "Are you ready ? send (yes or no)",
      "indice": [" 1/1:you don't need help for this question"],
      "control": [
        "python3",
        "control/doYouWantToContinu.py"
      ],
      "answer": "Let's do it",
      "storyEnd": "Before going futher you need to know something. \nFirst at any time you can send '-what' to review the question and -indice to get some help'"
    },
    {
      "storybegin": "First Question Death Stars : Find the logs I left on this machine",
      "question": "What is the repository of the files called 'secure-**' ?",
      "indice": [
        "1/3: There is no man tool on this machine but you can run 'man -k find' on you computer \nor check at http://www.linux-france.org/article/man-fr/man1/",
        "2/3: Something like that will do the job : find / -name ****",
        "3/3: When dealing with linux command, there are three standard screen \n-O is input,\n-1 is output,\n-2 is error\nyou can remove errors from the shell by sending the error screen away 2>/dev/null"
      ],
      "control": [
        "python3",
        "control/find.locationOfSecureFile.py"
      ],
      "answer": "My answer is : 'find / -name secure* 2>/dev/null' but there is a lot of other way \nBy the way files Secure-*** contain all log about connection attempt",
      "storyEnd": "You should keep this number '1' with the last question name"
    },
    {
      "storybegin": "2/15 Question USS Entreprise :Let's look at sshd log ",
      "question": "Have a look to these files with 'head'command \nHow many sshd log are present in the fileS ?",
      "indice": [
        "1/4: Look at 'grep' command on man ",
        "2/4: After filtering line you could use a pipe '|' to send the data to another command",
        "3/4: 'wc' allow to count world but could also be used for line",
        "4/4: grep *** | wc -l"
      ],
      "control": [
        "python3",
        "control/log.numberOfsshdLogs.py"
      ],
      "answer": "My answer : 'grep sshd secure-* | wc -l' \nLook's like the machine received a lot of requests",
      "storyEnd": "this time is 9"
    },
    {
      "storybegin": "3/15 Question Prometheus : What about Failed and Invalid?",
      "question": "How many log are about Failed and Invalid connection ?, Pay attention to cast",
      "indice": [
        "1/3: you must do a 'or expression' in the grep condition",
        "2/3: -E option tell grep to analyse as a regex expression, this regex has a specific syntax",
        "3/3: something like that : grep -E 'black|white' "
      ],
      "control": [
        "python3",
        "control/log.numberOfFailedAndInvalidLog.py"
      ],
      "answer": "My answer :'grep -E 'Failed|Invalid' secure-* |  wc -l' \nbut it's still hard to find my log",
      "storyEnd": "Prometheus is four \ntoo much log, you have to look deeper"
    },
    {
      "storybegin": "4/15 Question Odysse : What about IP ?",
      "question": "How many ipV4 different Failed and Invalid connection?",
      "indice": [
        "1/6: There are Four steps : filter interesting log | extract IP| remove duplicate IP | count left Ip ",
        "2/6: In order to extract you can use grep with regex,\nI advice you to use -P option which allow you to use python syntax rather than grep syntax",
        "3/6: you can test you regex online https://regex101.com/",
        "4/6: Befere removing duplicate IP, you have to change the data shape output, maybe grep -oh will help you",
        "5/6: uniq will remove duplicate but it works only if ip are sorted",
        "6/6: grep -E 'Failed|Invalid' secure-*| grep -ohP **** | sort | uniq | wc -**"
      ],
      "control": [
        "python3",
        "control/log.numberOfIPFailedToConnect.py"
      ],
      "answer": "My answer: grep -E 'Failed|Invalid' secure-* | grep -hPo '\\d{1,}\\.\\d{1,}\\.\\d{1,}\\.\\d{1,} | sort | uniq | wc -l' \nBut it's still hard to find my log",
      "storyEnd": "Note 3"
    },

    {
      "storybegin": "5/15 Question Pegasus : Maybe you could compare with Accepted IP",
      "question": "Give me the ip of the person who have been connect six times?",
      "indice": [
        "1/3: You must reuse all you did before",
        "2/3: uniq have a great option to count duplicate",
        "3/3: grep Accepted secure-* | grep -oPh **** | sort | uniq -c "
      ],
      "control": [
        "python3",
        "control/log.IPOfHacker.py"
      ],
      "answer": "My answer: 'grep Accepted secure-* | grep -oPh '\\d{1,}\\.\\d{1,}\\.\\d{1,}\\.\\d{1,}' | sort | uniq -c' \nok you find my IP",
      "storyEnd": "Keep in mind 5"
    },
    {
      "storybegin": "6/15  Question Serenity : Now you must find my name",
      "question": "What is my name ?",
      "indice": [
        "1/2: Be a big boy stop asking for help",
        "2/2: My name is writen in the log"
      ],
      "control": [
        "python3",
        "control/log.nameOfHacker.py"
      ],
      "answer": "Right now you have me name",
      "storyEnd": "write down 7"
    },
    {
      "storybegin": "7/15 Question Orion : You must check what I did before on the machine",
      "question": "Which command I have changed ?",
      "indice": [
        "1/4: Maybe you should look for file updating today",
        "2/4: Find command propose to filter one file metadata such as time, option created time  -ctime ",
        "3/4: Find .-ctime -1 2>/dev/null",
        "4/4: Most of system command are located in /usr/sbin"
      ],
      "control": [
        "python3",
        "control/find.changeCommand.py"
      ],
      "answer": "My anwser: 'find /usr/sbin -ctime -1 2>/dev/null ' \nYou find which command I changed",
      "storyEnd": "Take note of 3"
    },
    {
      "storybegin": "8/15 Question Faucon Millenium: Now you are going to see csv file. \nThere is one heavy city.csv in /home/csv ",
      "question": "How many column there is in city.csv",
      "indice": [
        "1/4: You know all you need, grep, head and wc will do the job",
        "2/4: head give you the first line with '-n 1' ",
        "3/4: pipe the first line to grep and extract comma",
        "4/4: Count the number of comma plus one"
      ],
      "control": [
        "python3",
        "control/csv.numberOfColum.py"
      ],
      "answer": "My answer: 'head -n 1 city.csv | grep -o , | wc -l'",
      "storyEnd": "It's the first"
    },
    {
      "storybegin": "9/15 Question Galactica : Let's use cut command ",
      "question": "What is the name of column 21 ",
      "indice": [
        "1/3: cut is a special tool for cutting specific column ",
        "2/3: You can specify the column separator with -d",
        "3/3: You can choose the output column with -f**"
      ],
      "control": [
        "python3",
        "control/csv.nameColum21.py"
      ],
      "answer": "My answer: 'head -n 1 city.csv| cut -d',' -f21'",
      "storyEnd": "This time nine will match "
    },

    {
      "storybegin": "10/15 Question Discovery One : Join information in city.csv and birth.csv ",
      "question": "Give me the city starting with 'B' that have 140 birth in 1990-1999 years? ",
      "indice": [
        "1/3: There is to way to do it : if you are an expert use join otherwise make a temporary file for grep",
        "2/3: You have to extract city which has 140 in birth.csv and look for the name is city.csv \nThe common column is POSTAL_CODE",
        "3/3: If you want to use join read https://shapeshed.com/unix-join/ \nIf you want to avoid join use grep -f "
      ],
      "control": [
        "python3",
        "control/csv.cityName.py"
      ],
      "answer": "my answer 1 : 'join -1 1 -2 1  -t, <( grep ',140.0' birth.csv| sort) <(sort city.csv ) | cut -d',' -f3' \nmy answer 2 : 'cut -d',' -f1-3 city.csv|grep -f code.csv' \n'grep ',140.0' birth.csv | cut -d',' -f1 > code.csv' ",
      "storyEnd": "it is four "
    },
    {
      "storybegin": "11/15 Question Icarus II : Now you are going to see json file and jq command \n There are json files in /home/json",
      "question": "This data has been downloaded from open data. Which command extracts all categories URI ?",
      "indice": [
        "1/1: 'jq . filename' read json object in the file - https://programminghistorian.org/lessons/json-and-jq"
      ],
      "control": [
        "python3",
        "control/json.commandListURI.py"
      ],
      "answer": "My answer: ' jq -r '.uri' categories/* ",
      "storyEnd": "3"
    },
    {
      "storybegin": "12/15 Question Insterstellar : Explore json file with jq",
      "question": "A script downloaded the open data catalogue and then by reading it downloaded all datasets and categories\nHow many dataset are referenced in a catalogue file ?",
      "indice": [
        "1/2: You can query through json object with the path like .object1.object2 ",
        "1/1: you can extract only keys ' .xxx | keys'"
      ],
      "control": [
        "python3",
        "control/json.numberDatasets.py"
      ],
      "answer": "My answer: jq '.data' catalogue/dataset1_json",
      "storyEnd": "Remember 8"

    },
    {
      "storybegin": "13:15 Question Valkyrie : Check if all dataset has been downloaded ",
      "question": "How many datasets aren't downloaded ? ",
      "indice": [
        "1/2: Extract dataset id from the file catalogue",
        "2/2: Count number of id and compare with number of file in folder datasets"
      ],
      "control": [
        "python3",
        "control/json.datasetNotDownloaded.py"
      ],
      "answer": "My answer : 'jq -r'.data[].id' catalogue/* | wc \n  ls -l datasets | wc ",
      "storyEnd": "keep in mind 7"
    },
    {
      "storybegin": "14/15 Question Nostromo: Find a last file",
      "question": "I created a file with the user Luc what is the file name ? ",
      "indice": [
        "1/1: Find with a specific option to  filter user"
      ],
      "control": [
        "python3",
        "control/find.fileName.py"
      ],
      "answer": "My answer: find / -user luc 2>/dev/null",
      "storyEnd": "6"
    }, {
      "storybegin": "15/15 Now you have every you need to find out the root code ",
      "question": "What is the root code ?",
      "indice": [
        "Death Stars,USS Entreprise,Prometheus,Odysse,Pegasus,Serenity,I Orion,Faucon Millenium,Galactica,Discovery One,Icarus II,Insterstellar,Valkyrie,Nostromo,Atlantis",
        "1,9,4,3,5,7,3,5,7,3,1,9,4,3,8,7,6,5",
        "Death Stars:1 => D"
      ],
      "control": [
        "python3",
        "control/rootCode.py"
      ],
      "answer": "It is beer time now ==> https://media.giphy.com/media/3o7TKKdv1vyUpyFLva/giphy.gif",
      "storyEnd": "####################################\n        This the end of this Game, have a good beer!!      \n####################################"
    },
     {
      "storybegin": "",
      "question": "",
      "indice": [
        ""
      ]
    }
  ]
}